[{"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/App.js":"1","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/index.js":"2","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/Banner.js":"3","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/Books.js":"4","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/actions/BookActions.js":"5","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/Home.js":"6","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/LogEntry.js":"7","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/BookLogForm.js":"8","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/NavSection.js":"9","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/SearchPage.js":"10","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/BookData.js":"11","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/Search.js":"12","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/reducers/BooksReducer.js":"13"},{"size":996,"mtime":1611714715705,"results":"14","hashOfConfig":"15"},{"size":868,"mtime":1611767042823,"results":"16","hashOfConfig":"15"},{"size":668,"mtime":1611763252598,"results":"17","hashOfConfig":"15"},{"size":1970,"mtime":1611722387556,"results":"18","hashOfConfig":"15"},{"size":1212,"mtime":1611715875665,"results":"19","hashOfConfig":"15"},{"size":522,"mtime":1611723159385,"results":"20","hashOfConfig":"15"},{"size":5260,"mtime":1611759299164,"results":"21","hashOfConfig":"15"},{"size":4650,"mtime":1611721098932,"results":"22","hashOfConfig":"15"},{"size":726,"mtime":1611759700501,"results":"23","hashOfConfig":"15"},{"size":131,"mtime":1611763065147,"results":"24","hashOfConfig":"15"},{"size":2611,"mtime":1611763100212,"results":"25","hashOfConfig":"15"},{"size":5203,"mtime":1611762826442,"results":"26","hashOfConfig":"15"},{"size":1048,"mtime":1611767543207,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vze2dg",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/App.js",[],"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/index.js",[],"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/Banner.js",["60"],"import React from 'react';\nimport {Jumbotron as Banner, Row, Col} from 'react-bootstrap';\nimport '../App.css'\n\nconst bannerImage = require('./historianNotes.jpg');\nexport const Jumbotron = () => (\n\n    <Banner fluid>\n        <Row>\n            <Col>\n                <div className='banner-text'>\n                    <h1>Book Notes</h1>\n                    <h4>Explore the exciting world of reading, search for books, and save all your important notes in once place</h4>\n                </div>\n            </Col>\n\n            <Col>\n                <img src={bannerImage} alt=\"explorer image\" width=\"200\" height=\"150\" />\n            </Col>\n        </Row>\n    </Banner>\n\n)",["61","62"],"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/Books.js",["63","64"],"import React, {Component} from 'react';\nimport BookLogForm from './BookLogForm';\nimport LogEntry from './LogEntry';\nimport {connect} from 'react-redux'\nimport {getBooks} from '../actions/BookActions'\nimport {deleteBook} from '../actions/BookActions'\n\nclass Books extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.onGet();\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"log-head\">Your Reading Log</h1>\n                <BookLogForm />\n                <hr/>\n                <h2 className=\"log-head\">Log Entries</h2>\n                <hr/>\n                <div className=\"list\">\n                    {\n                        this.props.books.sort(function(a, b) {\n                            let bookA = a.title.toUpperCase();\n                            let bookB = b.title.toUpperCase();\n                            if (bookA < bookB) {\n                                return -1;\n                            }\n                            if (bookA > bookB) {\n                                return 1;\n                            }\n                            return 0;\n                        }).map(book => {\n                            return (\n                                <logEntry\n                                    key={book.id}\n                                    book={book}\n                                    onDelete={this.props.onDelete}/>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        books: state.books || []\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onGet: () => {\n            dispatch(getBooks());\n        },\n        onDelete: (id) => {\n            dispatch(deleteBook(id))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);",["65","66"],"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/actions/BookActions.js",[],"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/Home.js",[],"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/LogEntry.js",["67","68"],"import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useDispatch} from 'react-redux';\n\nimport {updateBook} from '../actions/BookActions';\nimport {deleteBook} from '../actions/BookActions';\n\nimport {Form, Col, Button, Modal} from 'react-boostrap';\n\nimport '../App.css';\n\nfunction LogEntry({book}) {\n    let dispatch = useDispatch()\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const updateLog = () => {\n        handleClose()\n        dispatch(updateBook(\n            {\n                ...book,\n                title: title,\n                author: author, \n                pages: pages,\n                date_finished: date_finished,\n                people: people,\n                period: period, \n                something_learned: something_learned,\n                question: question\n            }\n        ))\n        window.alert(\"Entry updated.\")\n    }\n\n    const handleDelete = () => {\n        let confirmation = window.confirm(\"Are you sure you want to delete this log entry?\")\n        if (confirmation == true) {\n            dispatch(deleteBook(book))\n            window.alert(\"Log entry deleted.\")\n            window.location.reload()\n        }\n    }\n\n    const [title, setTitle] = useState(book.title)\n    const [author, setAuthor] = useState(book.author)\n    const [pages, setPages] = useState(book.pages)\n    const [date_finished, setDate] = useState(book.date_finished)\n    const [people, setPeople] = useState(book.people)\n    const [period, setPeriod] = useState(book.period)\n    const [something_learned, setSomething_Learned] = useState(book.something_learned)\n    const [question, setQuestion] = useState(book.question)\n\n    return(\n        <div className='log-entry' key={book.id}>\n            <h3>{book.title}</h3>\n            <p><b>Author:</b> {book.author}</p>\n            <p><b>Number of Pages</b> {book.pages}</p>\n            <p><b>Date Finished:</b> {book.date_finished}</p>\n            <p><b>Important figures:</b> {book.people}</p>\n            <p><b>Historical period:</b> {book.period}</p>\n            <p><b>Something learned from this book:</b> {book.something_learned}</p>\n            <p><b>A question about this book:</b> {book.question}</p>\n            <Button value={book} onClick={handleShow} variant=\"dark\">EDIT</Button> | <Button variant=\"danger\" onClick={handleDelete}>DELETE</Button>\n            <Modal size=\"lg\" show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Log Entry</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form className=\"entry-form\">\n\n                        <Form.Row>\n                            <Col>\n                                <Form.Label>Title:</Form.Label>\n                                <Form.Control required type='text' value={title} onChange={e => setTitle(e.target.value)} name=\"title\"/>\n                            </Col>\n                            <Col>\n                                <Form.label>Author:</Form.label>\n                                <Form.Control required type='text' value={author} onChange={e => setAuthor(e.target.value)} name=\"author\"/>\n                            </Col>\n                            <Col>\n                                <Form.Label>Number of Pages</Form.Label>\n                                <Form.Control required type='number' value={pages} onChange={e => setPages(e.target.value)} name=\"pages\"/>\n                            </Col>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Col>\n                            <Form.Label>Date Finished:</Form.Label>\n                            <Form.Control required type='date' value={date_finished} onChange={e => setDate(e.target.value)} name=\"date_finished\"/>\n                            </Col>\n                        </Form.Row>\n\n                        <Form.Label>Important Figures</Form.Label>\n                        <Form.Control required type='text' value={people} onChange={e => setPeople(e.target.value)} name=\"people\"/>\n\n                        <Form.Label>Historical Period</Form.Label>\n                        <Form.Control required type='text' value={period} onChange={e => setPeriod(e.target.value)} name=\"period\"/>\n\n                        <Form.Label>Something You've Learned</Form.Label>\n                        <Form.Control require type='text' value={something_learned} onChange={e => setSomething_Learned(e.target.value)} name=\"something_learned\"/>\n\n                        <Form.Label>Question You Have About This Book:</Form.Label>\n                        <Form.Control require type='text' value={question} onChange={e => setQuestion(e.target.value)} name=\"question\"/>\n                        <br/>\n\n                    </Form>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button onClick={updateLog} variant=\"success\">Save Changes</Button> | <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n\n}\n\nexport default connect(null, {updateBook, deleteBook})(LogEntry);","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/BookLogForm.js",[],"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/NavSection.js",[],"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/SearchPage.js",[],"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/BookData.js",["69","70"],"import React, {useState} from 'react';\nimport {Card, Button, Modal} from 'react-bootstrap'\n\nconst BookData = ({\n    thumbnail,\n    title, \n    pageCount, \n    description,\n    authors,\n    previewLink, \n    infoLink\n}) => {\n\n    const [show, setShow] = useState(false);\n\n        const handleClose = () => setShow(false);\n        const handleShow = () => setShow(true);\n\n            return (\n                <Card style={{width: '233px'}} className='m-auto border border-success'>\n                    <Card.Img top style={{width: '100%', height: '233px'}} src={thumbnail} alt={title} />\n                    <Card.Body>\n                        <Card.Title className='card-title'>{title}</Card.Title>\n                        <Button onClick={handleShow}>Details</Button>\n                    </Card.Body>\n                    <Modal show={show} onHide={handleClose}>\n                        <div className='modal-header d-flex justify-content-center'>\n                            <h5 className='modal-title text-center' id='exampleModalLabel'>{title}</h5>\n                            <button arial-label='Close' className='close' type='button' onClick={handleClose}>\n                                <span aria-hidden={true}>X</span>\n                            </button>\n                        </div>\n                        <div className='modal-body'>\n                            <div className='d-flex justify-content-between ml-3'>\n                                <img src={thumbnail} alt={title} style={{height: '233px'}} />\n                                <div>\n                                    <p>Pages: {pageCount}</p>\n                                    <p>Author(s): {authors}</p>\n                                </div>\n                            </div>\n                            <div className='mt-3'>{description}</div>\n                        </div>\n                        <div className='modal-footer'>\n                            <div className='left-slide'>\n                                <a href={previewLink} className='btn-link' color='default' type='button' target='_blank' rel='noopener noreferre'>Preview Book</a>\n                            </div>\n                            <div className='divider'></div>\n                            <div className='right-slide'>\n                                <a href={infoLink} className='btn-link' color='default' type='button' target='_blank' rel='nooopener noreferre'>Book Info</a>\n                            </div>\n                        </div>\n                    </Modal>\n                </Card>\n            )\n}\n\nexport default BookData;","/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/components/Search.js",[],"/Users/felipecruz/Documents/Projects/React/BookNotes/book-notes-client/src/reducers/BooksReducer.js",[],{"ruleId":"71","severity":1,"message":"72","line":18,"column":17,"nodeType":"73","endLine":18,"endColumn":88},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":9,"column":5,"nodeType":"84","messageId":"85","endLine":11,"endColumn":6},{"ruleId":"74","replacedBy":"86"},{"ruleId":"76","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":39,"column":26,"nodeType":"90","messageId":"91","endLine":39,"endColumn":28},{"ruleId":"92","severity":1,"message":"93","line":79,"column":33,"nodeType":"73","endLine":79,"endColumn":45},{"ruleId":"94","severity":1,"message":"95","line":45,"column":106,"nodeType":"96","endLine":45,"endColumn":121},{"ruleId":"94","severity":1,"message":"95","line":49,"column":103,"nodeType":"96","endLine":49,"endColumn":118},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'LogEntry' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["97"],["98"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component label must be in PascalCase or SCREAMING_SNAKE_CASE","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]